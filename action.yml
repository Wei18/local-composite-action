name: 'Setup Symlink for Action Repository'
description: 'Find and create symlink to the action repository path based on the provided inputs.'

# ``` example
# steps:
#   - uses: wei18/local-composite-action@v1
#     with:
#       action_repository: ${{ github.action_repository }}
# ```

inputs:
  action_path:
    description: The path where an action is located.
    default: ${{ github.action_path }}
  action_repository:
    description: |
      This is the owner and repository name of the action.
      Please input the value of GITHUB_ACTION_REPOSITORY
    required: true

runs:
  using: "composite"
  steps:
    - name: Detect existing symlinked action path
      id: check_symlinked
      env:
        ACTION_PATH: ${{ inputs.action_path }}
      shell: bash
      run: |
        # -- Detect existing symlinked action path

        if [[ "$ACTION_PATH" == *"./../"* ]]; then
          echo "exist=true" >> "$GITHUB_OUTPUT"
          echo "✅ Action path is local (contains ./../); skipping remaining steps."
        else
          echo "exist=false" >> "$GITHUB_OUTPUT"
        fi

    - if: steps.check_symlinked.outputs.exist != 'true'
      name: Find action repository directory
      id: action_repository
      env:
        ACTION_PATH: ${{ inputs.action_path }}
        ACTION_REPOSITORY: ${{ inputs.action_repository }}
      shell: bash
      run: |
        # -- Find action repository directory

        # Parse the organization and repository from the provided input (composite_action_repository)
        IFS='/' read -r ORG REPO <<< "$ACTION_REPOSITORY"
        ORG="$(echo "$ORG" | tr '[:upper:]' '[:lower:]')"
        REPO="$(echo "$REPO" | tr '[:upper:]' '[:lower:]')"

        # Convert the current path to lowercase initially to avoid doing it repeatedly in the loop
        CURRENT="$(echo "$ACTION_PATH" | tr '[:upper:]' '[:lower:]')"

        # Start from the composite action path and check each parent directory
        while [ "$CURRENT" != "/" ]; do
          # from path/to/org/repo/hash/to/action/
          # to path/to/org/repo/hash/
          CURRENT_NAME="$(basename "$CURRENT")"
          PARENT="$(dirname "$CURRENT")"
          PARENT_NAME="$(basename "$PARENT")"
          GRANDPARENT="$(dirname "$PARENT")"
          GRANDPARENT_NAME="$(basename "$GRANDPARENT")"

          if [[ "$PARENT_NAME" == "$REPO" && "$GRANDPARENT_NAME" == "$ORG" ]]; then
            echo "path=$CURRENT" >> $GITHUB_OUTPUT
            exit 0
          fi

          CURRENT="$PARENT"
        done

        # If no match is found, output an error
        echo "::error::Could not find action repository ($ACTION_REPOSITORY) from path ($ACTION_PATH)"
        exit 1

    - if: steps.check_symlinked.outputs.exist != 'true'
      name: Create symlink
      env:
        ACTION_REPOSITORY_PATH: ${{ steps.action_repository.outputs.path }}
        ACTION_REPOSITORY: ${{ inputs.action_repository }}
        GITHUB_WORKSPACE: ${{ github.workspace }}
      shell: bash
      run: |
        # -- Create symlink, forcing overwrite if it exists

        ROOT_DIR="$(dirname "$GITHUB_WORKSPACE")"
        SYMLINK_PATH="$ROOT_DIR/$ACTION_REPOSITORY"
        mkdir -p "$(dirname "$SYMLINK_PATH")"
        ln -fs "$ACTION_REPOSITORY_PATH" "$SYMLINK_PATH"
        echo "✅ You can now use it with \`uses: ./../$ACTION_REPOSITORY/path/to/action\`"

branding:
  icon: 'arrow-right'
  color: 'green'
